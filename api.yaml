swagger: '2.0'
basePath: /v1
host: api.zoop.ws
info:
  title: Objetos Base
  version: '1.1'
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
tags:
  - name: Vendedor
    description: Pessoas ou empresas que vendem dentro do seu marketplace.
  - name: Comprador
    description: Pessoas ou empresas que compram dentro do seu marketplace
  - name: Token
    description: Token de cartões de crédito
  - name: Saldo de Conta
    description: Saldo de conta zoop
  - name: Disputa
    description: Operações para consulta de disputas
  - name: Documento de Contestação
    description: Operações upload e consulta de documentos de contestação
schemes:
  - https
paths:
  '/marketplaces/{marketplace_id}/sellers/{seller_id}/documents':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/sellerId'
    post:
      tags:
        - Vendedor
      summary: Criar documento de cadastro de vendedor
      description: ''
      operationId: addDocument
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: file
          type: file
          in: formData
          required: true
          format: binary
          description: Documento que será cadastrado
        - name: category
          in: formData
          type: string
          required: true
          description: Categoria do documento cadastrado
        - name: metadata
          in: formData
          type: string
          description: Metadados associados ao documento
        - name: description
          in: formData
          type: string
          description: Descrição do documento
      responses:
        '201':
          description: Documento criado com sucesso
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: Marketplace/Vendedor/Documento não encontrado
    get:
      tags:
        - Vendedor
      summary: Listar documentos de um vendedor
      description: ''
      operationId: findSellerDocument
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/sortParam'
        - $ref: '#/parameters/offsetParam'
        - $ref: '#/parameters/dateRangeParam'
        - $ref: '#/parameters/dateRangeGTParam'
        - $ref: '#/parameters/dateRangeGTEParam'
        - $ref: '#/parameters/dateRangeLTParam'
        - $ref: '#/parameters/dateRangeLTEParam'
      responses:
        '200':
          description: Documentos recuperados com sucesso
          schema:
            $ref: '#/definitions/Documents'
        '404':
          description: Marketplace/Vendedor não encontrado
  '/marketplaces/{marketplace_id}/sellers/documents/{id}':
    put:
      tags:
        - Vendedor
      summary: Atualiza os dados de um documento de um vendedor
      description: ''
      operationId: updateDocument
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - name: id
          in: path
          description: ID do documento
          required: true
          type: string
        - in: body
          name: body
          description: Document object
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: Documento alterado com sucesso
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: Marketplace/Documento não encontrado
  /merchant_category_codes:
    get:
      tags:
        - Vendedor
      summary: Listar MCCs (Merchant Category Codes)
      description: ''
      operationId: ''
      produces:
        - application/json
      responses:
        '200':
          description: Operação realizada com sucesso
          schema:
            example:
              resource: list
              uri: /v1/merchant_category_codes
              items:
                - id: '1'
                  code: '5300'
                  category: Alimentação
                  description: Atacado
                  resource: merchant_category_code
              has_more: true
              limit: 100
              total_pages: 2
              page: 1
              offset: 0
              total: '103'
  '/marketplaces/{marketplace_id}/sellers/individuals':
    post:
      tags:
        - Vendedor
      summary: Criar novo vendedor do tipo indivíduo
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/Individual'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor cadastrado com sucesso
          schema:
            $ref: '#/responses/Individual'
        '400':
          description: Missing required param
        '404':
          description: Marketplace não encontrado
  '/marketplaces/{marketplace_id}/sellers/individuals/{seller_id}':
    put:
      tags:
        - Vendedor
      summary: Alterar um vendedor do tipo indivíduo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/Individual'
      responses:
        '200':
          description: Vendedor alterado com sucesso
          schema:
            $ref: '#/responses/Individual'
        '400':
          description: Missing required param
        '404':
          description: Marketplace não encontrado
  '/marketplaces/{marketplace_id}/sellers/businesses':
    post:
      tags:
        - Vendedor
      summary: Criar novo vendedor do tipo empresa
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/Business'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: Vendedor cadastrado com sucesso
          schema:
            $ref: '#/responses/Business'
        '400':
          description: Missing required param
        '404':
          description: Marketplace não encontrado
  '/marketplaces/{marketplace_id}/sellers/businesses/{seller_id}':
    put:
      tags:
        - Vendedor
      summary: Alterar um vendedor do tipo empresa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - in: body
          name: body
          description: Business object
          required: true
          schema:
            $ref: '#/definitions/Business'
      responses:
        '200':
          description: Vendedor alterado com sucesso
          schema:
            $ref: '#/responses/Business'
        '400':
          description: Missing required param
        '404':
          description: Marketplace/Vendedor não encontrado
  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/sellerId'
    get:
      tags:
        - Vendedor
      summary: 'Recupera detalhes de vendedor pelo id, os campos começando por "business_" são específicos para empresas.'
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor recuperado com sucesso
          schema:
            $ref: '#/responses/Business'
        '404':
          description: Marketplace/Vendedor não encontrado
    delete:
      tags:
        - Vendedor
      summary: Deleta um de vendedor pelo id
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor deletado com sucesso
          schema:
            example:
              id: 17d9e827664b47509f12a082b6047e7a
              resource: seller
              type: individual
              deleted: true
        '404':
          description: Marketplace/Vendedor não encontrado
  '/marketplaces/{marketplace_id}/sellers':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/limitParam'
      - $ref: '#/parameters/sortParam'
      - $ref: '#/parameters/offsetParam'
      - $ref: '#/parameters/dateRangeParam'
      - $ref: '#/parameters/dateRangeGTParam'
      - $ref: '#/parameters/dateRangeGTEParam'
      - $ref: '#/parameters/dateRangeLTParam'
      - $ref: '#/parameters/dateRangeLTEParam'
    get:
      tags:
        - Vendedor
      summary: Listando vendedores
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor recuperado com sucesso
          schema:
            $ref: '#/responses/Businesses'
        '404':
          description: Marketplace/Vendedor não encontrado
  '/marketplaces/{marketplace_id}/sellers/search':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - in: query
        name: taxpayer_id
        type: string
        description: CPF do vendedor
      - in: query
        name: ein
        type: string
        description: CNPJ do vendedor
    get:
      tags:
        - Vendedor
      summary: Buscando de vendedor por CPF/CNPJ
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor encontrado com sucesso
          schema:
            $ref: '#/responses/Businesses'
        '400':
          description: Missing required parameter
        '404':
          description: Vendedor não encontrado
  '/marketplaces/{marketplace_id}/buyers':
    parameters:
      - $ref: '#/parameters/marketplaceId'
    post:
      tags:
        - Comprador
      summary: Criar comprador
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: buyer data
          required: true
          schema:
            $ref: '#/definitions/BuyerRequest'
      responses:
        '200':
          description: Comprador criado com sucesso
          schema:
            $ref: '#/definitions/Buyer'
        '400':
          description: Missing required param
        '404':
          description: Marketplace não encontrado
    get:
      tags:
        - Comprador
      summary: Listar comprador por marketplace
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador encontrado
        '404':
          description: Marketplace não encontrado
  '/marketplaces/{marketplace_id}/buyers/{buyer_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
    put:
      tags:
        - Comprador
      summary: Alterar detalhes de comprador
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Comprador alterado com sucesso
          schema:
            $ref: '#/definitions/Buyer'
        '400':
          description: Missing required param
        '404':
          description: Marketplace/Buyer não encontrado
    get:
      tags:
        - Comprador
      summary: Recuperar detalhes de comprador
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador alterado com sucesso
          schema:
            $ref: '#/definitions/Buyer'
        '404':
          description: Marketplace/Buyer não encontrado
    delete:
      tags:
        - Comprador
      summary: Remover comprador pelo identificador
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador removido com sucesso
        '404':
          description: Marketplace/Buyer não encontrado
  '/marketplaces/{marketplace_id}/buyers/search':
    parameters:
      - $ref: '#/parameters/marketplaceId'
    get:
      tags:
        - Comprador
      summary: Buscar comprador por CPF/CNPJ
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Comprador encontrado
        '404':
          description: Marketplace não encontrado
  '/marketplaces/{marketplace_id}/sellers/{seller_id}/balances':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
    get:
      tags:
        - Saldo de Conta
      summary: Recuperar saldo de conta por seller
      description: Recupera o saldo corrente e saldo total de conta
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/marketplaces/{marketplace_id}/sellers/{seller_id}/balances/all':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
    get:
      tags:
        - Saldo de Conta
      summary: Lista contas por seller
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/marketplaces/{marketplace_id}/buyers/{buyer_id}/balances':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
    get:
      tags:
        - Saldo de Conta
      summary: Lista contas por buyer
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Buyer não encontrado
  '/marketplaces/{marketplace_id}/balances/{balance_id}/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: balance_id
        in: path
        description: identificador da conta
        required: true
        type: string
    get:
      tags:
        - Saldo de Conta
      summary: Listar histórico de lançamentos pelo identificador da conta
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Saldo não encontrado
  '/marketplaces/{marketplace_id}/sellers/{seller_id}/balances/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
    get:
      tags:
        - Saldo de Conta
      summary: Listar histórico de lançamentos de conta por seller
      description: Listagem de histórico da conta principal do seller
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/marketplaces/{marketplace_id}/buyers/{buyer_id}/balances/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
    get:
      tags:
        - Saldo de Conta
      summary: Listar histórico de lançamentos de conta por buyer
      description: Listagem de histórico da conta principal do buyer
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/marketplaces/{marketplace_id}/cards/tokens':
    parameters:
      - $ref: '#/parameters/marketplaceId'
    post:
      tags:
        - Token
      summary: Criar novo token de cartão
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: token data
          required: true
          schema:
            $ref: '#/definitions/TokenCardRequest'
      responses:
        '200':
          description: Token de cartão criado com sucesso
        '400':
          description: Requisição/Parâmetros invalidos
        '404':
          description: Marketplace/ não encontrado
  '/marketplaces/{marketplace_id}/bank_accounts/tokens':
    parameters:
      - $ref: '#/parameters/marketplaceId'
    post:
      tags:
        - Token
      summary: Criar novo token de conta bancária
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Token de cartão criado com sucesso
        '400':
          description: Requisição/Parâmetros invalidos
        '404':
          description: Marketplace não encontrado
      parameters:
        - in: body
          name: token data
          required: true
          schema:
            $ref: '#/definitions/BankAccountRequest'
  '/marketplaces/{marketplace_id}/tokens/{token_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: token_id
        in: path
        description: identificador do token
        required: true
        type: string
    get:
      tags:
        - Token
      summary: Recuperar detalhes de token de cartão/conta bancária
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Token recuperado com sucesso
        '404':
          description: Marketplace/Token não encontrado
definitions:
  Documents:
    type: object
    properties:
      resource:
        type: string
        example: list
      uri:
        type: string
        example: /v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers/582dcc754cef4e6e8ed3134067c2f76b/documents
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/Document'
  Document:
    type: object
    properties:
      id:
        type: string
        example: 00dad23fae8b49638f6b897f6b7df5c2
      name:
        type: string
        example: 59d7d71a9b617.pdf
      status:
        type: string
        enum:
          - pending
          - uploaded
          - reviewving
          - action_required
          - approved
          - published
          - rejected
          - archived
          - deleted
        example: pending
      path:
        type: string
        example: 'https://static-assetss.s3.amazonaws.com/59d7d71a9b617.pdf'
      extension:
        type: string
        example: pdf
      mime_type:
        type: string
        example: application/pdf
      size:
        type: integer
        example: 11401
      md5:
        type: string
        example: 02136adef2c29815d97902147069b23c
      description:
        type: string
        example: documento de identificacao
      category:
        type: string
        enum:
          - identification
          - address
          - activity
          - ein
        example: identification
      uploaded_by:
        type: object
        properties:
          id:
            type: string
            example: ab22b0c077e04099afa144d375cbf293
          resource:
            type: string
            enum:
              - seller
              - buyer
              - marketplace
            example: seller
          type:
            type: string
            enum:
              - individual
              - business
            example: individual
      uploaded_ip:
        type: string
      metadata:
        type: object
  Business:
    type: object
    properties:
      fiscal_responsibility:
        type: string
        description: ID de vendedor responsável por receber os créditos pelas vendas
      owner:
        type: object
        properties:
          first_name:
            type: string
            example: José
          last_name:
            type: string
            example: Da Silva
          email:
            type: string
            example: teeste@teste.com
          phone_number:
            type: string
            example: ' 12029579543'
          taxpayer_id:
            type: string
            example: '76537741807'
          birthdate:
            type: string
            example: '1982-12-15'
      description:
        type: string
        example: Descrição da empresa
      business_name:
        type: string
        example: Zoop Inc
      business_phone:
        type: string
        example: '12026256754'
      business_email:
        type: string
        example: hello@pagzoop.com
      business_website:
        type: string
        example: 'http://getzoop.com'
      business_description:
        type: string
        example: The open mobile payment platform
      business_facebook:
        type: string
        example: 'http://fb.com/getzoop'
      business_twitter:
        type: string
        example: 'http://twitter.com/getzoop'
      ein:
        type: string
        example: '24742492000159'
        description: CNPJ da empresa
      statement_descriptor:
        type: string
        example: NOME FANTASIA
        description: Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.
      business_address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Barra da Tijuca
          city:
            type: string
            example: Rio de Janeiro
          state:
            type: string
            example: RJ
            description: 'Código ISO 3166-2 para o estado, com duas letras'
          postal_code:
            type: string
            example: '10023000'
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      business_opening_date:
        type: string
        format: date
        example: '2015-04-17'
      owner_address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Barra da Tijuca
          city:
            type: string
            example: Rio de Janeiro
          state:
            type: string
            example: RJ
            description: 'Código ISO 3166-2 para o estado, com duas letras'
          postal_code:
            type: string
            example: '10023000'
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      mcc:
        type: string
        example: '1'
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
  Individuals:
    type: object
    properties:
      resource:
        type: string
        example: list
      uri:
        type: string
        example: /v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/Individual'
  Individual:
    type: object
    properties:
      fiscal_responsibility:
        type: string
        description: ID de vendedor responsável por receber os créditos pelas vendas
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: ' 12029579543'
      taxpayer_id:
        type: string
        example: '76537741807'
        description: CPF do vendedor
      birthdate:
        type: string
        example: '1982-12-15'
      statement_descriptor:
        type: string
        example: NOME FANTASIA
      description:
        type: string
        example: null
      address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Downtown
          city:
            type: string
            example: Washington
          state:
            type: string
            example: DC
            description: 'Código ISO 3166-2 para o estado, com duas letras'
          postal_code:
            type: string
            example: '10023'
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      mcc:
        type: string
        example: '1'
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
  TokenCardRequest:
    type: object
    properties:
      holder_name:
        type: string
        description: Nome do portador
      expiration_month:
        type: string
        description: mês de expiração do cartão (MM)
      expiration_year:
        type: string
        description: ano de expiração do cartão (AAAA)
      card_number:
        type: string
        description: Número do cartão
      security_code:
        type: string
        description: Código de segurança do cartão (CVC)
  BuyerRequest:
    type: object
    properties:
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: ' 12029579543'
      taxpayer_id:
        type: string
        example: '76537741807'
      birthdate:
        type: string
        example: '1982-12-15'
      description:
        type: string
        example: null
      address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Downtown
          city:
            type: string
            example: Washington
          state:
            type: string
            example: DC
          postal_code:
            type: string
            example: '10023'
          country_code:
            type: string
            example: US
  Buyer:
    type: object
    properties:
      id:
        type: string
        example: d2385e3c49164e6195f072763c0a1eaa
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: buyer
      account_balance:
        type: number
        example: 0
      current_balance:
        type: number
        example: 0
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: ' 12029579543'
      taxpayer_id:
        type: string
        example: '76537741807'
      birthdate:
        type: string
        example: '1982-12-15'
      description:
        type: string
        example: null
      address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Downtown
          city:
            type: string
            example: Washington
          state:
            type: string
            example: DC
          postal_code:
            type: string
            example: '10023'
          country_code:
            type: string
            example: US
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: cartão default para compras
      default_credit:
        type: string
        description: conta bancaria default para depositios
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      updated_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
  BankAccountRequest:
    type: object
    properties:
      holder_name:
        type: string
        description: Nome do portador
      bank_code:
        type: number
        description: Bank Account
      routing_number:
        type: number
        description: Agencia sem DV (4 digitos)
      account_number:
        type: number
        description: Conta Bancaria com DV
      taxpayer_id:
        type: string
        description: 'CPF, caso seller seja PF'
      ein:
        type: string
        description: 'CNPJ, caso seller seja PJ'
      type:
        type: string
        description: Conta corrente ou poupança
        enum:
          - checking
          - savings
  DisputeTO:
    type: object
    properties:
      amount:
        type: number
        format: double
      authorization:
        type: string
      cardHolder:
        type: string
      cardType:
        type: string
      descReason:
        type: string
      dflag:
        type: integer
        format: int32
      disputeDate:
        type: string
        format: date-time
      fileSent:
        type: boolean
      hasAssociateFile:
        type: boolean
      id:
        type: string
      marketPlaceId:
        type: string
      maskCreditNumber:
        type: string
      merchant:
        type: string
      nsu:
        type: string
      purchaseAmount:
        type: number
        format: double
      purchaseDate:
        type: string
        format: date-time
      reason:
        type: string
      status:
        type: string
      tid:
        type: string
      transactionId:
        type: string
      updatedAt:
        type: string
        example: 'yyyy-MM-dd HH:mm:ss.SSSZ'
  DisputeTORequest:
    type: object
    required:
      - acquirer
      - amount
      - cardType
      - caseNumber
      - disputeDate
      - process
      - purchaseDate
      - reason
      - result
      - transactionId
    properties:
      acquirer:
        type: string
      amount:
        type: number
        format: double
      authorization:
        type: string
      cardHolder:
        type: string
      cardType:
        type: string
      caseNumber:
        type: string
      descReason:
        type: string
      disputeDate:
        type: string
        description: yyyy-mm-dd
      maskCreditNumber:
        type: string
      merchant:
        type: string
      nsu:
        type: string
      process:
        type: string
      purchaseAmount:
        type: number
        format: double
      purchaseDate:
        type: string
        description: yyyy-mm-dd
      reason:
        type: string
      result:
        type: string
      tid:
        type: string
      transactionId:
        type: string
  Error:
    type: object
    properties:
      category:
        type: string
      message:
        type: string
      status:
        type: string
      status_code:
        type: integer
        format: int32
      type:
        type: string
  ErrorResponse:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
  PagedResult:
    type: object
    properties:
      elements:
        type: array
        items:
          type: object
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      totalElements:
        type: integer
        format: int64
  PagedResult«DisputeTO»:
    type: object
    properties:
      elements:
        type: array
        items:
          $ref: '#/definitions/DisputeTO'
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      totalElements:
        type: integer
        format: int64
  Transactions:
    type: object
    properties:
      resource:
        type: string
        example: list
      uri:
        type: string
        example: /v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/transactions
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        $ref: '#/definitions/TransactionResponse'
  TransactionResponse:
    type: object
    properties:
      id:
        type: string
        example: 0009462369b14ee596aabfd27faa97f7
      status:
        type: string
        enum:
          - new
          - pending
          - succeeded
          - canceled
          - reversed
          - failed
          - pre_authorized
        example: succeeded
      resource:
        type: string
        example: transaction
      amount:
        type: string
        example: '1.00'
      original_amount:
        type: string
        example: '1.00'
      currency:
        type: string
        example: BRL
      description:
        type: string
        example: BRL
      payment_type:
        enum:
          - credit
          - wallet
          - boleto
        example: credit
      transaction_number:
        type: string
        example: W-12343124
      sales_receipt:
        type: string
        example: 00d5ce5086c84c0f824cf660b020881a
      on_behalf_of:
        type: string
        example: 1e5ee2e290d040769806c79e6ef94ee1
      statement_descriptor:
        type: string
        example: CORRENTISTA 03  3011
      payment_method:
        type: object
        properties:
          id:
            type: string
            example: 2f008ac254964e658be566241cc87c1a
          resource:
            type: string
            example: card
          description:
            type: string
            example: null
          card_brand:
            type: string
            example: Visa
          first4_digits:
            type: string
            example: '4893'
          last4_digits:
            type: string
            example: null
          expiration_month:
            type: string
            example: '7'
          expiration_year:
            type: string
            example: '2023'
          holder_name:
            type: string
            example: LEITE/ANDRE S DE M
          is_active:
            type: boolean
            example: false
          is_valid:
            type: boolean
            example: true
          is_verified:
            type: boolean
            example: false
          customer:
            type: string
            example: e4e8c5b569da48b28d896385f5481bcf
          fingerprint:
            type: string
            example: 9f2843f0c1b08d6018927b4e5e884a869ae49
          uri:
            type: string
            example: /v1/marketplaces/3249465a7753536b62545a6a684b0000/cards/2f008ac254964e658be566241cc87c1a
          metadata:
            type: object
          created_at:
            type: string
            format: dateTime
            example: '2015-04-17T06:39:52+00:00'
          updated_at:
            type: string
            format: dateTime
            example: '2015-04-17T06:39:52+00:00'
      point_of_sale:
        type: object
        properties:
          entry_mode:
            type: string
            enum:
              - manually_keyed
              - magstripe
              - barcode
              - ocr
              - chip
              - contactless_chip
              - magstripe_fallback
              - manually_keyed_fallback
              - contactless_magstripe
            example: chip
          identification_number:
            type: string
            example: 4b7d03e6aa01463bb5673f04a7717db9
      refunded:
        type: boolean
        example: false
      voided:
        type: boolean
        example: false
      captured:
        type: boolean
        example: false
      fees:
        type: string
        example: '0.05'
      fee_details:
        type: object
        properties:
          amount:
            type: string
            example: '0.05'
          prepaid:
            type: boolean
            example: true
          currency:
            type: string
            example: BRL
          type:
            type: string
            example: zoop_credit_fee_d0
          description:
            type: string
            example: Zoop prepaid card-present credit fee
      uri:
        type: string
        example: |
          /v1/marketplaces/3249465a7753536b62545a6a684b0000/transactions/0009462369b14ee596aabfd27faa97f7
      metadata:
        type: object
      expected_on:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      created_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      updated_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
  TransactionUpdateRequest:
    type: object
    properties:
      description:
        type: string
        example: BRL
      metadata:
        type: object
  TransactionVoidRequest:
    type: object
    required:
      - on_behalf_of
      - amount
    properties:
      on_behalf_of:
        type: string
        description: Identificador do seller responsável pela venda
        example: 1e5ee2e290d040769806c79e6ef94ee1
      amount:
        type: integer
        description: valor da venda a ser estornado em centavos
  TransactionCaptureRequest:
    type: object
    required:
      - on_behalf_of
      - amount
    properties:
      on_behalf_of:
        type: string
        description: Identificador do seller responsável pela venda
        example: 1e5ee2e290d040769806c79e6ef94ee1
      amount:
        type: integer
        description: 'valor da venda a ser capturado em centavos. para captura parcial basta enviar valor a menor, sendo possível realizar somente uma captura parcial por autorização'
  SplitRuleRequest:
    type: object
    required:
      - amount
    properties:
      recipient:
        type: string
        description: Identificador do seller recebedor
        example: 1e5ee2e290d040769806c79e6ef94ee1
      liable:
        type: boolean
        description: define se o recebedor arca com prejuízo em caso de chargeback ou não. 1 arca; 0 não arca.
        default: 0
      charge_processing_fee:
        type: boolean
        description: define se vai ser feito split em cima do valor bruto (0) ou do valor líquido (1) da transação
        default: 0
      percentage:
        type: integer
        description: percentual da venda a ser splitado.
      amount:
        type: integer
        description: valor em centavos a ser splitado.
  CardRequest:
    type: object
    required:
      - token
      - customer
    properties:
      token:
        type: string
        description: Identificador do token de cartão a ser associado ao customer
        example: 1e5ee2e290d040769806c79e6ef94ee1
      customer:
        type: string
        description: Identificador do customer
  SourceResponse:
    type: object
    properties:
      id:
        type: string
        example: 0009462369b14ee596aabfd27faa97f7
      status:
        type: string
        enum:
          - pending
          - charged
          - deleted
        example: charged
      usage:
        type: string
        enum:
          - single_use
          - reusable
        default: single_use
      amount:
        type: string
        example: '1.00'
        description: valor a ser cobrado na venda (opcional)
      currency:
        type: string
        example: BRL
        description: moeda do valor a ser cobrado na venda (opcional)
      description:
        type: string
        example: BRL
        description: descrição da venda quando gerada (opcional)
      type:
        type: string
        enum:
          - wallet
          - card
          - card_and_wallet
          - token
          - customer
          - three_d_secure
          - debit_online
        example: card
      capture:
        type: boolean
        example: false
        description: Capturar transação (true) ou criar uma pre-autorização (false) para ser capturada a posteriori
      on_behalf_of:
        type: string
        example: 1e5ee2e290d040769806c79e6ef94ee1
      reference_id:
        type: string
        example: '10902'
        description: ID referência da sua aplicação VARCHAR(500)
      card:
        type: object
        description: objeto obrigatório no tipo card e card_and_wallet
        properties:
          id:
            type: string
            example: 2f008ac254964e658be566241cc87c1a
          amount:
            type: string
            example: '1.00'
            description: valor a ser cobrado na venda (opcional)
          resource:
            type: string
            example: card
          description:
            type: string
            example: null
          card_brand:
            type: string
            example: Visa
          first4_digits:
            type: string
            example: '4893'
          last4_digits:
            type: string
            example: null
          expiration_month:
            type: string
            example: '7'
          expiration_year:
            type: string
            example: '2023'
          holder_name:
            type: string
            example: LEITE/ANDRE S DE M
          is_active:
            type: boolean
            example: false
          is_valid:
            type: boolean
            example: true
          is_verified:
            type: boolean
            example: false
          customer:
            type: string
            example: e4e8c5b569da48b28d896385f5481bcf
          fingerprint:
            type: string
            example: 9f2843f0c1b08d6018927b4e5e884a869ae49
          uri:
            type: string
            example: /v1/marketplaces/3249465a7753536b62545a6a684b0000/cards/2f008ac254964e658be566241cc87c1a
          metadata:
            type: object
          created_at:
            type: string
            format: dateTime
            example: '2015-04-17T06:39:52+00:00'
          updated_at:
            type: string
            format: dateTime
            example: '2015-04-17T06:39:52+00:00'
      installment_plan:
        type: object
        properties:
          mode:
            type: string
            enum:
              - interest_free
              - with_interest
            description: 'modo de parcelamento, com juros no emissor (with_interest), ou sem juros (interest_free), com o custo já calculado no valor da transação. '
          number_installments:
            type: integer
            description: número de parcelas (1-12)
      statement_descriptor:
        type: string
        example: CORRENTISTA 03  3011
      customer:
        type: object
        description: identificador do comprador que será cobrado
        properties:
          id:
            type: string
            example: 1e5ee2e290d040769806c79e6ef94ee1
            description: 'identificador do comprador que será cobrado para source tipo customer, wallet e card_and_wallet'
          amount:
            type: integer
            example: 100
            description: valor a ser cobrado neste customer (opcional)
      token:
        type: object
        description: identificador do token de cartão que será cobrado obrigatorio no source tipo token
        properties:
          id:
            type: string
            description: identificador do cartão para source tipo card
            example: 1e5ee2e290d040769806c79e6ef94ee1
          amount:
            type: integer
            example: 100
            description: valor a ser cobrado neste token (opcional)
      uri:
        type: string
        example: |
          /v1/marketplaces/3249465a7753536b62545a6a684b0000/sources/0009462369b14ee596aabfd27faa97f7
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      updated_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
  SourceRequest:
    type: object
    required:
      - type
      - usage
    properties:
      usage:
        type: string
        enum:
          - single_use
          - reusable
        default: single_use
      amount:
        type: integer
        example: 100
        description: valor em centavos a ser cobrado na venda (opcional)
      currency:
        type: string
        example: BRL
        description: moeda do valor a ser cobrado na venda
      description:
        type: string
        example: BRL
        description: descrição da venda quando gerada (opcional)
      type:
        type: string
        enum:
          - wallet
          - card
          - card_and_wallet
          - token
          - customer
          - three_d_secure
          - debit_online
        example: card
      capture:
        type: boolean
        example: false
        description: Capturar transação (true) ou criar uma pre-autorização (false) para ser capturada a posteriori
      on_behalf_of:
        type: string
        example: 1e5ee2e290d040769806c79e6ef94ee1
      reference_id:
        type: string
        example: '10902'
        description: ID referência da sua aplicação VARCHAR(500)
      card:
        type: object
        description: objeto obrigatório no tipo card e card_and_wallet
        properties:
          id:
            type: string
            example: 8c795953db6342be9fc14a36d5308bed
            description: identificador do cartão para source tipo card
          amount:
            type: integer
            example: 100
            description: valor a ser cobrado neste cartao (opcional)
          holder_name:
            type: string
          expiration_month:
            type: string
            description: mês de expiração do cartão (MM)
          expiration_year:
            type: string
            description: ano de expiração do cartão (AAAA)
          card_number:
            type: string
            description: Número do cartão
          security_code:
            type: string
            description: Código de segurança do cartão (CVC)
      installment_plan:
        type: object
        properties:
          mode:
            type: string
            enum:
              - interest_free
              - with_interest
            description: 'modo de parcelamento, com juros no emissor (with_interest), ou sem juros (interest_free), com o custo já calculado no valor da transação. '
          number_installments:
            type: integer
            description: número de parcelas (1-12)
      statement_descriptor:
        type: string
        example: CORRENTISTA 03  3011
      customer:
        type: object
        description: identificador do comprador que será cobrado
        properties:
          id:
            type: string
            example: 1e5ee2e290d040769806c79e6ef94ee1
            description: 'identificador do comprador que será cobrado para source tipo customer, wallet e card_and_wallet'
          amount:
            type: integer
            example: 100
            description: valor a ser cobrado neste customer (opcional)
      token:
        type: object
        description: identificador do token de cartão que será cobrado obrigatorio no source tipo token
        properties:
          id:
            type: string
            description: identificador do cartão para source tipo card
            example: 1e5ee2e290d040769806c79e6ef94ee1
          amount:
            type: integer
            example: 100
            description: valor a ser cobrado neste token (opcional)
      metadata:
        type: object
  TransactionCNPRequest:
    type: object
    required:
      - amount
      - currency
      - description
      - payment_type
      - on_behalf_of
    properties:
      amount:
        type: integer
        example: 100
        description: valor em centavos a ser cobrado pela transação
      currency:
        type: string
        example: BRL
      description:
        type: string
        example: BRL
      payment_type:
        type: string
        enum:
          - credit
          - wallet
          - boleto
        example: credit
      capture:
        type: boolean
        example: false
        description: Capturar transação (true) ou criar uma pre-autorização (false) para ser capturada a posteriori
      on_behalf_of:
        type: string
        example: 1e5ee2e290d040769806c79e6ef94ee1
      reference_id:
        type: string
        example: '10902'
        description: ID referência da sua aplicação VARCHAR(500)
      payment_method:
        type: object
        properties:
          expiration_date:
            type: string
            example: 20170410
            description: Data de vencimento utilizado nas vendas por boleto
          top_instructions:
            type: array
            description: Instruções para o comprador utilizado nas vendas por boleto
            items:
              type: string
      source:
        $ref: '#/definitions/SourceRequest'
      installment_plan:
        type: object
        properties:
          mode:
            type: string
            enum:
              - interest_free
              - with_interest
            description: 'modo de parcelamento, com juros no emissor (with_interest), ou sem juros (interest_free), com o custo já calculado no valor da transação. '
          number_installments:
            type: integer
            description: número de parcelas (1-12)
      statement_descriptor:
        type: string
        example: CORRENTISTA 03  3011
      customer:
        type: string
        description: identificador do comprador que será cobrado
        example: 1e5ee2e290d040769806c79e6ef94ee1
      token:
        type: string
        description: identificador do token de cartão que será cobrado
        example: 1e5ee2e290d040769806c79e6ef94ee1
      metadata:
        type: object
parameters:
  marketplaceId:
    name: marketplace_id
    in: path
    description: ID do marketplace
    required: true
    type: string
  sellerId:
    name: seller_id
    in: path
    description: ID do Seller
    required: true
    type: string
  buyerId:
    name: buyer_id
    in: path
    description: identificador do buyer
    required: true
    type: string
  limitParam:
    name: limit
    in: query
    description: 'Limita o número de objetos retornados, podendo ser entre 1 e 100'
    required: false
    type: number
    format: int32
    default: 20
  sortParam:
    name: sort
    in: query
    description: Determinar como ordenar a lista em relação a data de criação do objeto
    required: false
    type: string
    enum:
      - time-descending
      - time-ascending
    default: time-descending
  offsetParam:
    name: offset
    in: query
    description: Determina o ponto de inicio dos registros retornados
    required: false
    type: number
    format: int32
    default: 0
  dateRangeParam:
    name: date_range
    in: query
    description: 'Filtro na lista base de objetos pela data de criação. O valor pode ser uma string com um horário em UTC timestamp, ou pode ser uma lista com os parametros abaixo'
    required: false
    type: number
  dateRangeGTParam:
    name: 'date_range[gt]'
    in: query
    description: Retorna valores onde a data maior que o timestamp informado
    required: false
    type: number
  dateRangeGTEParam:
    name: 'date_range[gte]'
    in: query
    description: Retorna valores onde a data for maior ou igual que o timestamp informado
    required: false
    type: number
  dateRangeLTParam:
    name: 'date_range[lt]'
    in: query
    description: Retorna valores onde a data for menor que o timestamp informado
    required: false
    type: number
  dateRangeLTEParam:
    name: 'date_range[lte]'
    in: query
    description: Retorna valores onde a data for menor ou igual que o timestamp informado
    required: false
    type: number
responses:
  Businesses:
    type: object
    properties:
      resource:
        type: string
        example: list
      uri:
        type: string
        example: /v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/responses/Business'
  Business:
    type: object
    properties:
      id:
        type: string
        example: 17d9e827664b47509f12a082b6047e7a
        description: Identificador exclusivo para este vendedor
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: seller
      type:
        type: string
        enum:
          - individual
          - business
        example: business
      account_balance:
        type: number
        example: 0
      current_balance:
        type: number
        example: 0
      fiscal_responsibility:
        type: string
        description: ID de vendedor responsável por receber os créditos pelas vendas
      owner:
        type: object
        properties:
          first_name:
            type: string
            example: José
          last_name:
            type: string
            example: Da Silva
          email:
            type: string
            example: teeste@teste.com
          phone_number:
            type: string
            example: ' 12029579543'
          taxpayer_id:
            type: string
            example: '76537741807'
          birthdate:
            type: string
            example: '1982-12-15'
      description:
        type: string
        example: null
      business_name:
        type: string
        example: Zoop Inc
      business_phone:
        type: string
        example: '12026256754'
      business_email:
        type: string
        example: hello@pagzoop.com
      business_website:
        type: string
        example: 'http://getzoop.com'
      business_description:
        type: string
        example: The open mobile payment platform
      business_facebook:
        type: string
        example: 'http://fb.com/getzoop'
      business_twitter:
        type: string
        example: 'http://twitter.com/getzoop'
      ein:
        type: string
        example: '24742492000159'
        description: CNPJ da empresa (somente números)
      statement_descriptor:
        type: string
        example: NOME FANTASIA
        description: Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.
      business_address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Barra da Tijuca
          city:
            type: string
            example: Rio de Janeiro
          state:
            type: string
            example: RJ
            description: 'Código ISO 3166-2 para o estado, com duas letras'
          postal_code:
            type: string
            example: '10023000'
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      business_opening_date:
        type: string
        format: date
        example: '2015-04-17'
      owner_address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Barra da Tijuca
          city:
            type: string
            example: Rio de Janeiro
          state:
            type: string
            example: RJ
          postal_code:
            type: string
            example: '10023000'
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: 'O método de pagamento padrão (cartão ou conta bancária) associado a um vendedor que será usado, por exemplo, para debitar a conta bancária ou cartão de crédito'
      default_credit:
        type: string
        description: O banco bancário padrão associado a um vendedor que será usado para enviar dinheiro (crédito) a conta bancária
      mcc:
        type: string
        example: '1'
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      updated_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
  Individuals:
    type: object
    properties:
      resource:
        type: string
        example: list
      uri:
        type: string
        example: /v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/responses/Individual'
  Individual:
    type: object
    description: Estrutura padrão de um seller pessoa física
    properties:
      id:
        type: string
        example: 17d9e827664b47509f12a082b6047e7a
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: seller
      type:
        type: string
        enum:
          - individual
          - business
        example: individual
      account_balance:
        type: number
        example: 0
      current_balance:
        type: number
        example: 0
      fiscal_responsibility:
        type: string
        description: ID de vendedor responsável por receber os créditos pelas vendas
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: ' 12029579543'
      taxpayer_id:
        type: string
        example: '76537741807'
        description: CPF do vendedor
      birthdate:
        type: string
        example: '1982-12-15'
      statement_descriptor:
        type: string
        example: NOME FANTASIA
      description:
        type: string
        example: null
      address:
        type: object
        properties:
          line1:
            type: string
            example: 167 West 74th Street
          line2:
            type: string
            example: '543'
          line3:
            type: string
            example: APT 601
          neighborhood:
            type: string
            example: Barra da Tijuca
          city:
            type: string
            example: Rio de Janeiro
          state:
            type: string
            example: RJ
            description: 'Código ISO 3166-2 para o estado, com duas letras'
          postal_code:
            type: string
            example: '10023000'
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: BR
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: cartão default para compras
      default_credit:
        type: string
        description: conta bancaria default para depositios
      mcc:
        type: string
        example: '1'
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
      updated_at:
        type: string
        format: dateTime
        example: '2015-04-17T06:39:52+00:00'
